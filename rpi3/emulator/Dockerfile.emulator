FROM alpine:3.18.4
# ARGs will be get from docker-compose build args
ARG DEFAULT_UID
ARG DEFAULT_GID
ARG DEFAULT_UG_NAME

ENV USER_UID=${DEFAULT_UID}
ENV GROUP_GID=${DEFAULT_GID}
ENV UG_NAME=${DEFAULT_UG_NAME}

# Set the working directory
WORKDIR /data

# Create a new system group and a new system user with the specified UID, GID, and username.
RUN addgroup --system --gid ${GROUP_GID} ${UG_NAME} && \
    adduser --system --disabled-password --no-create-home \
    # --home /home/${UG_NAME} \
    --uid ${USER_UID} --ingroup ${UG_NAME} ${UG_NAME}

# Install required tools
RUN apk update \
 && apk upgrade --no-cache \
 && apk --no-cache add \
        qemu-system-aarch64 \
        iproute2 net-tools lsof \
 && rm -rf /var/cache/apk/*

# Update the image to the latest packages
RUN apk update \
 && apk upgrade --no-cache \
 && apk --no-cache add \
        qemu-system-aarch64 \
        iproute2 net-tools lsof

# Expose port 2222 for SSH
EXPOSE 2222

USER ${UGNAME}
# COPY qemu_raspi3b_config.cfg /qemu_raspi3b_config.cfg

# COPY entrypoint.emulator.sh /entrypoint.sh
# RUN chmod +x /entrypoint.sh

# ENTRYPOINT ["/entrypoint.sh"]

# # Start qemu with SSH port forwarding
# # All env vars in file ../emulator.env
# ENTRYPOINT qemu-aarch64 -name rpi3bp -machine raspi3b -cpu cortex-a72 -nographic \
#     -dtb "$DTB_FILE" -m 1G -smp 4 \
#     -kernel "$KERNEL_FILE" -sd "$SD_IMAGE_FILE" \
#     -append "$APPEND" \
#     -device "$DEVICE" \
#     -netdev "$NETDEV"

ENTRYPOINT ["qemu-system-aarch64"]
CMD ["-h"]

# ENTRYPOINT ["/bin/bash", "-c", \
#     "qemu-system-aarch64 -machine raspi3b -cpu cortex-a53 -nographic -dtb ${DTB_FILE} -m 1G -smp 4 -kernel ${KERNEL_FILE} -sd ${IMAGE_FILE} -append 'rw earlyprintk loglevel=8 console=ttyAMA0,115200 dwc_otg.lpm_enable=0 root=/dev/mmcblk0p2 rootdelay=1' -device usb-net,netdev=net0 -netdev user,id=net0,hostfwd=tcp::2222-:22,hostfwd=tcp::8080-:80"]
