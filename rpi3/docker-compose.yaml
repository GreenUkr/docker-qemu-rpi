version: '3.8'

services:
  chown:
    # We can use any image we want as long as we can chown
    image: alpine:3.18.4
    # Need a user priviliged enough to chown
    user: "root"
    # Specify the group in question
    group_add:
      - ${GROUP_GID}
    volumes:
      # The volume to chown
      - data-volume:/data
    command: chown -R ${USER_UID}:${GROUP_GID} /data

  downloader:
    image: greenukr/downloader:0.4.0
    build:
      context: ./downloader
      dockerfile: Dockerfile.downloader
      args:
        - DEFAULT_UID=${USER_UID}
        - DEFAULT_GID=${GROUP_GID}
        - DEFAULT_UG_NAME=${UG_NAME}
    working_dir: /data
    volumes:
      - data-volume:/data
    env_file:
      - ./.env
      - ./.downloader.env
    depends_on:
      chown:
        condition: service_completed_successfully

  processor:
    image: greenukr/processor:0.4.0
    build:
      context: ./processor
      dockerfile: Dockerfile.processor
      args:
        - DEFAULT_UID=${USER_UID}
        - DEFAULT_GID=${GROUP_GID}
        - DEFAULT_UG_NAME=${UG_NAME}
    working_dir: /data
    volumes:
      - data-volume:/data
    env_file:
      - ./.env
      - ./.downloader.env
      - ./.processor.env
    # entrypoint: ["/bin/sh", "-c", "sleep infinity"]
    depends_on:
      downloader:
        condition: service_completed_successfully

  emulator:
    image: greenukr/emulator:0.4.0
    cpu_count: 4
    mem_reservation: 3072M
    mem_limit: 4096M
    shm_size: 2048M
    build:
      context: ./emulator
      dockerfile: Dockerfile.emulator
      args:
        - DEFAULT_UID=${USER_UID}
        - DEFAULT_GID=${GROUP_GID}
        - DEFAULT_UG_NAME=${UG_NAME}
    working_dir: /data
    volumes:
      - data-volume:/data
    ports:
      - "2222:2222"
    env_file:
      - ./.env
      - ./.processor.env
    # security-opt:
    #     - no-new-privileges
    depends_on:
      processor:
        condition: service_completed_successfully
    # entrypoint: >-
    #   qemu-system-aarch64 
    #   -name rpi3bp -machine raspi3b -cpu cortex-a72 -m 1G -smp 4 -nographic 
    #   -dtb bcm2710-rpi-3-b-plus.dtb -kernel kernel8.img -sd sd.qcow2 
    #   -append "rw earlyprintk loglevel=8 console=ttyAMA0,115200 dwc_otg.lpm_enable=0 root=/dev/mmcblk0p2 rootdelay=1" 
    #   -device usb-net,netdev=net0,mac=02:ca:fe:f0:0d:01 -netdev user,id=net0,hostfwd=tcp::2222-:22
    command: >-
      -name rpi3bp -machine raspi3b -cpu cortex-a72 -m 1G -smp 4 -nographic 
      -dtb ${DTB_FILE} -kernel ${KERNEL_FILE} -sd ${SD_NAME} 
      -append "rw earlyprintk loglevel=8 console=ttyAMA0,115200 dwc_otg.lpm_enable=0 root=/dev/mmcblk0p2 rootdelay=1" 
      -device usb-net,netdev=net0,mac=02:ca:fe:f0:0d:01 -netdev user,id=net0,hostfwd=tcp::2222-:22
    # command: >-
    #   -name rpi3bp -machine raspi3b -cpu cortex-a72 -m 1G -smp 4 -nographic 
    #   -dtb bcm2710-rpi-3-b-plus.dtb -kernel kernel8.img -sd sd.qcow2 
    #   -append "rw earlyprintk loglevel=8 console=ttyAMA0,115200 dwc_otg.lpm_enable=0 root=/dev/mmcblk0p2 rootdelay=1" 
    #   -device usb-net,netdev=net0,mac=02:ca:fe:f0:0d:01 -netdev user,id=net0,hostfwd=tcp::2222-:22
    # command: ["-version"]
    restart: "no"
    # restart: always
    # restart: on-failure
    # restart: unless-stopped

volumes:
  data-volume:
